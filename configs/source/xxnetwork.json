{
  "Keys": "SessionKeysPolkadot",
  "ValidatorPrefs": {
    "type": "struct",
    "type_mapping": [
      [
        "commission",
        "Compact<Balance>"
      ],[
        "blocked",
        "bool"
      ],[
        "cmix_root",
        "Hash"
      ]
    ]
  },
  "ValidatorPrefsWithBlocked": {
    "type": "struct",
    "type_mapping": [
      [
        "commission",
        "Compact<Balance>"
      ],[
        "blocked",
        "bool"
      ],[
        "cmix_root",
        "Hash"
      ]
    ]
  },
  "InflationFixedParams": {
    "type": "struct",
    "type_mapping": [
      [
        "min_inflation",
        "Compact<Balance>"
      ],[
        "ideal_stake",
        "Compact<Balance>"        
      ],[
        "falloff",
        "Compact<Balance>"
      ]
    ]
  },
  "IdealInterestPoint": {
    "type": "struct",
    "type_mapping": [
      [
        "block",
        "BlockNumber"
      ],[
        "interest",
        "Compact<Balance>"
      ]
    ]
  },
  "CustodyInfo": {
    "type": "struct",
    "type_mapping": [
      [
        "allocation",
        "Compact<Balance>"
      ],[
        "vested",
        "Compact<Balance>"
      ],[
        "custody",
        "AccountId"
      ],[
        "reserve",
        "AccountId"
      ],[
        "proxied",
        "bool"
      ]
    ]
  },
  "SoftwareHashes": {
    "type": "struct",
    "type_mapping": [
      [
        "server",
        "Hash"
      ],[
        "fatbin",
        "Hash"
      ],[
        "libpow",
        "Hash"
      ],[
        "gateway",
        "Hash"
      ],[
        "scheduling",
        "Hash"
      ],[
        "wrapper",
        "Hash"
      ],[
        "udb",
        "Hash"
      ],[
        "notifications",
        "Hash"
      ],[
        "extra",
        "Option<Vec<Hash>>"
      ]
    ]
  },
  "CountryCode": "[u8; 2]",
  "GeoBin": "u8",
  "PointsMultiplier": "u16",
  "RewardPoints": {
    "type": "struct",
    "type_mapping": [
      [
        "success",
        "u32"
      ],[
        "failure",
        "u32"
      ],[
        "block",
        "u32"
      ]
    ]
  },
  "Performance": {
    "type": "struct",
    "type_mapping": [
      [
        "period",
        "u64"
      ],[
        "points",
        "RewardPoints"
      ],[
        "countries",
        "Vec<(CountryCode, GeoBin)>"
      ],[
        "multipliers",
        "Vec<(GeoBin, PointsMultiplier)>"
      ]
    ]
  },
  "Timeouts": {
    "type": "struct",
    "type_mapping": [
      [
        "precomputation",
        "u64"
      ],[
        "realtime",
        "u64"
      ],[
        "advertisement",
        "u64"
      ]
    ]
  },
  "Scheduling": {
    "type": "struct",
    "type_mapping": [
      [
        "team_size",
        "u8"
      ],[
        "batch_size",
        "u32"
      ],[
        "min_delay",
        "u64"
      ],[
        "pool_threshold",
        "Balance"
      ]
    ]
  },
  "UserRegistration": {
    "type": "struct",
    "type_mapping": [
      [
        "max",
        "u32"
      ],[
        "period",
        "u64"
      ]
    ]
  },
  "Variables": {
    "type": "struct",
    "type_mapping": [
      [
        "performance",
        "Performance"
      ], [
        "timeouts",
        "Timeouts"
      ], [
        "scheduling",
        "Scheduling"
      ], [
        "registration",
        "UserRegistration"
      ]
    ]
  },
  "Timepoint": {
    "type": "struct",
    "type_mapping": [
      [
        "height",
        "BlockNumber"
      ],
      [
        "index",
        "u32"
      ]
    ]
  },
  "Multisig": {
    "type": "struct",
    "type_mapping": [
      [
        "when",
        "Timepoint"
      ],
      [
        "deposit",
        "Balance"
      ],
      [
        "depositor",
        "AccountId"
      ],
      [
        "approvals",
        "Vec<AccountId>"
      ]
    ]
  },
  "BalanceLock<Balance>": {
    "type": "struct",
    "type_mapping": [
      [
        "id",
        "LockIdentifier"
      ],
      [
        "amount",
        "Balance"
      ],
      [
        "reasons",
        "Reasons"
      ]
    ]
  },
  "ReferendumInfo<BlockNumber, Hash>": {
    "type": "enum",
    "type_mapping": [
      [
        "Ongoing",
        "ReferendumStatus"
      ],
      [
        "Finished",
        "ReferendumInfoFinished"
      ]
    ]
  },
  "DispatchResult": {
    "type": "enum",
    "type_mapping": [
      [
        "Ok",
        "Null"
      ],
      [
        "Error",
        "DispatchError"
      ]
    ]
  },
  "Heartbeat": {
    "type": "struct",
    "type_mapping": [
      [
        "blockNumber",
        "BlockNumber"
      ],
      [
        "networkState",
        "OpaqueNetworkState"
      ],
      [
        "sessionIndex",
        "SessionIndex"
      ],
      [
        "authorityIndex",
        "AuthIndex"
      ]
    ]
  },
  "Weight#1058-?": "u64",
  "Heartbeat#1062-?": {
    "type": "struct",
    "type_mapping": [
      [
        "blockNumber",
        "BlockNumber"
      ],
      [
        "networkState",
        "OpaqueNetworkState"
      ],
      [
        "sessionIndex",
        "SessionIndex"
      ],
      [
        "authorityIndex",
        "AuthIndex"
      ],
      [
        "validatorsLen",
        "u32"
      ]
    ]
  },
  "ReferendumInfo<BlockNumber, Hash, BalanceOf>": {
    "type": "enum",
    "type_mapping": [
      [
        "Ongoing",
        "ReferendumStatus"
      ],
      [
        "Finished",
        "ReferendumInfoFinished"
      ]
    ]
  },
  "DispatchInfo#1019-1061": "DispatchInfo258",
  "DispatchInfo#1062-?": {
    "type": "struct",
    "type_mapping": [
      [
        "weight",
        "Weight"
      ],
      [
        "class",
        "DispatchClass"
      ],
      [
        "paysFee",
        "Pays"
      ]
    ]
  },
  "ReferendumInfo#1019-1054": {
    "type": "struct",
    "type_mapping": [
      [
        "end",
        "BlockNumber"
      ],
      [
        "proposal",
        "Proposal"
      ],
      [
        "threshold",
        "VoteThreshold"
      ],
      [
        "delay",
        "BlockNumber"
      ]
    ]
  },
  "DispatchError#1019-1031": {
    "type": "struct",
    "type_mapping": [
      [
        "module",
        "Option<u8>"
      ],
      [
        "error",
        "u8"
      ]
    ]
  },
  "ProxyType": {
    "type": "enum",
    "value_list": [
      "Any",
      "NonTransfer",
      "Governance",
      "Staking",
      "IdentityJudgement",
      "CancelProxy",
      "Auction"
    ]
  },
  "Address#1050-2027": "AccountId",
  "Box<Proposal>": "BoxProposal",
  "CompactAssignments#2023-9000": "CompactAssignmentsLatest",
  "RefCount": "u32",
  "Box<<T as Config>::Call>": "Call",
  "Box<<T as Config<I>>::Proposal>": "Proposal",
  "AccountInfo": "AccountInfoWithTripleRefCount",
  "Address#2028-?": "MultiAddress",
  "LookupSource#2028-?": "MultiAddress",
  "Keys#2028-2029": {
    "type": "struct",
    "type_mapping": [
      [
        "grandpa",
        "AccountId"
      ],
      [
        "babe",
        "AccountId"
      ],
      [
        "im_online",
        "AccountId"
      ],
      [
        "para_validator",
        "AccountId"
      ],
      [
        "para_assignment",
        "AccountId"
      ],
      [
        "authority_discovery",
        "AccountId"
      ]
    ]
  },
  "ValidatorPrefs#2028-?": "ValidatorPrefsWithBlocked",
  "Keys#2030-?": "SessionKeys6",
  "CompactAssignments#9010-?": "CompactAssignmentsWith24",
  "AssetInstance": "AssetInstanceV0",
  "MultiAsset": "MultiAssetV0",
  "Xcm": "XcmV0",
  "XcmOrder": "XcmOrderV0",
  "MultiLocation": "MultiLocationV0"
}
